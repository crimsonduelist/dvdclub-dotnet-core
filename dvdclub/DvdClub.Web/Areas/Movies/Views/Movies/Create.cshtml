
@model DvdClub.Web.Areas.Movies.Models.MoviesCreateBindingModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MoviesCreateBindingModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @*@Html.DropDownListFor(model => model.Genre, htmlAttributes: new { @class = "form-control" })*@
                @*@Html.DropDownListFor(Html.GetEnumSelectList<Genre>(),"genre",new { @class = "form-control" })*@
                @*@Html.DropDownList("Genre",Html.GetEnumSelectList<Model.>(),"Genre",new { @class = "form-control" })*@
                <select class="form-control" asp-for="Genre" asp-items="Html.GetEnumSelectList<DvdClub.Core.Enumeration.Genre>()">
                    <option selected="selected" value="">Genre</option>
                </select>
                <!--Could create additional property in the CreateBindingModel that s a list of Genre then fill it in my [HttpGet] 
                    Or fill in the "empty" constructor itself
                -->
            
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
